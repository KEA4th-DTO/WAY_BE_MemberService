spring:
#  config:
#    import:
#      - application-mysql.yml
#      - application-keys.yml
#      - application-postgresql.yml
#      - application-postgresql-kubernetis.yml
  application:
    name: way.member
    # MySQL
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: ${MYSQL_DB_HOST}
#    username: ${MYSQL_DB_USER}
#    password: ${MYSQL_DB_PASSWORD}

  # MySQL
#  jpa:
#    database: mysql
#    database-platform: org.hibernate.dialect.MySQL8Dialect
#    hibernate:
#      ddl-auto: create-drop
#    properties:
#      hibernate:
#        format_sql: true #To beautify or pretty print the SQL
#        show_sql: true #show sql
#        dialect: org.hibernate.dialect.MySQL8Dialect
  # PostgreSQL-local
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRESQL_DB_HOST}
    username: ${POSTGRESQL_DB_USER}
    password: ${POSTGRESQL_DB_PASSWORD}
  # PostgreSQL-kubernetis
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: ${POSTGRESQL_KUBERNETIS_DB_HOST}
#    username: ${POSTGRESQL_KUBERNETIS_DB_USER}
#    password: ${POSTGRESQL_KUBERNETIS_DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      database: postgresql
      hibernate:
        format_sql: true #To beautify or pretty print the SQL
        show_sql: true #show sql
      database-platform: org.hibernate.spatial.dialect.postgis.PostgisDialect
  data:
    redis:
      host: localhost
#      host: 10.99.167.174
      port: 6379

  mail:
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        debug: true
        smtp.auth: true
        smtp.timeout: 60000 # 60000ms, 1ë¶„
        smtp.starttls.enable: true
  kafka:
    bootstrap-servers: 10.109.201.158:9092
    template:
      default-topic: follow
    consumer:
      group-id: group-1

cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
      path:
        daily: daily_image
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}